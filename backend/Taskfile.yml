version: '3'

tasks:
  dev-up:
    cmds:
      - docker compose up server db adminer -d
  dev-down:
    cmds:
      - docker compose down
  dev-build:
    cmds:
      - docker compose build
  dev-build-nocache:
    cmds:
      - docker compose build --no-cache
  migrate-up:
    cmds:
      - docker compose run --rm migrate migrate -path /migrate/migrations -database "postgresql://user:password@db:5432/yosegaki?sslmode=disable" up
  migrate-up-one:
    cmds:
      - docker compose run --rm migrate migrate -path /migrate/migrations -database "postgresql://user:password@db:5432/yosegaki?sslmode=disable" up 1
  migrate-down:
    cmds:
      - docker compose run --rm migrate migrate -path /migrate/migrations -database "postgresql://user:password@db:5432/yosegaki?sslmode=disable" down 1
  migrate-create:
    vars:
      name: "{{.NAME}}"
    cmds:
      - |
        if [ -z "{{.name}}" ]; then
          echo "Usage: task migrate-create NAME=migration_name"
        else
          docker compose run --rm migrate migrate create -ext sql -dir /migrate/migrations  -seq "{{.name}}"
        fi
  gen-openapi:
    cmds:
      - sh -c "oapi-codegen --package=openapi -generate gin --old-config-style ../openapi/openapi.yaml > svc/pkg/openapi/server.gen.go"
      - sh -c "oapi-codegen --package=openapi -generate types --old-config-style ../openapi/openapi.yaml > svc/pkg/openapi/types.gen.go"
      - sh -c "oapi-codegen --package=openapi -generate client --old-config-style ../openapi/openapi.yaml > svc/pkg/openapi/client.gen.go"
  gen-gorm:
    cmds:
      - go run ./cmd/gen
