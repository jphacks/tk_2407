openapi: 3.0.0
info:
  title: Health Check API
  version: "1.0.0"
paths:
  /health:
    get:
      description: health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthRes"
  /api/v1/messages:
    get:
      description: get message list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessageRes"

components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
  schemas:
    HealthRes:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: healthy
    SuccessMessageRes:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Message ID
              author_name:
                type: string
                description: Author of the message
              content:
                type: string
                description: Message content
              stamps:
                type: object
                description: Message stamps
                nullable: true 
                additionalProperties:
                  type: object
                  properties:
                    count:
                      type: integer
                      description: Stamp count
                    is_reacted:
                      type: boolean
                      description: Check if the user has stamped
      required:
        - messages 

      example:
        messages:
          - id: 1
            author: "田中さくら"
            content: "桜の季節が来ました！公園で花見をするのが楽しみです。みんなでピクニックしましょう！"
            stamps:
              smile:
                count: 5
                is_reacted: true
              heart:
                count: 3
                is_reacted: false
          - id: 2
            author: "佐藤健太"
            content: "今朝、公園でジョギングしていたら、きれいな朝日を見ました。心が洗われる思いでした。"
            stamps:
              smile:
                count: 5
                is_reacted: true
          - id: 3
            author: "鈴木美咲"
            content: "子供たちと遊具で遊んだ後、芝生の上でお弁当。休日の過ごし方として最高です！"
            stamps:
              smile:
                count: 5
                is_reacted: true
    ErrorRes:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: error message
