openapi: 3.0.0
info:
  title: Health Check API
  version: "1.0.0"
paths:
  /api/v1/health:
    get:
      description: health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthRes"
  /api/v1/messages/{location_id}:
    get:
      description: get message list
      parameters:
      - name: location_id
        in: path
        required: true
        description: The ID of the location to get messages for
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessageRes"
  /api/v1/spots:
    get:
      description: Retrieve a list of locations based on longitude, latitude
      parameters:
        - name: longitude
          in: query
          required: true
          description: The longitude of the location.
          schema:
            type: number
            format: float
        - name: latitude
          in: query
          required: true
          description: The latitude of the location.
          schema:
            type: number
            format: float
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessLocationRes"
  /api/v1/user/{user_id}:
    get:
      description: get user
      parameters:
      - name: user_id
        in: path
        required: true
        description: The ID of user
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessUserRes"

components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRes"
  schemas:
    HealthRes:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: healthy
    SuccessMessageRes:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string  # メッセージ ID
              author_name:
                type: string  # メッセージの著者名
              content:
                type: string  # メッセージの内容
              stamps:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    count:
                      type: integer  # スタンプのカウント
                    is_reacted:
                      type: boolean  # ユーザーがスタンプを押したかどうか
                  required: [count,is_reacted]
                nullable: true
            required: [id, author_name, content]  # messages 配列内の必須フィールド
      required: [messages]  # SuccessMessageRes の必須フィールド
      example:
        messages:
          - id: 1
            author: "田中さくら"
            content: "桜の季節が来ました！公園で花見をするのが楽しみです。みんなでピクニックしましょう！"
            stamps:
              smile:
                count: 5
                is_reacted: true
              heart:
                count: 3
                is_reacted: false
          - id: 2
            author: "佐藤健太"
            content: "今朝、公園でジョギングしていたら、きれいな朝日を見ました。心が洗われる思いでした。"
            stamps:
              smile:
                count: 5
                is_reacted: true
          - id: 3
            author: "鈴木美咲"
            content: "子供たちと遊具で遊んだ後、芝生の上でお弁当。休日の過ごし方として最高です！"
            stamps:
              smile:
                count: 5
                is_reacted: true
    SuccessLocationRes:
      type: object
      properties:
        spots:
          nullable: true
          type: array
          items:
            type: object
            properties:
              spot_id:
                type: string
              google_map_place_id:
                type: string
              name:
                type: string
              description:
                type: string
              photo_url:
                type: string
              latitude:
                type: number
                format: float
              longitude:
                type: number
                format: float
            required: [spot_id,google_map_place_id,name,description,latitude,longitude,photo_url]
      example:
        spots:
          - spot_id: "spot123"
            google_map_place_id: "ChIJN1t_tDeuEmsRUsoyG83frY4"
            name: "Beautiful Park"
            description: "A quiet park with lovely scenery and walking paths."
            latitude: 35.6895
            longitude: 139.6917
          - spot_id: "spot456"
            google_map_place_id: "ChIJyWEHuEmuEmsRm9hTkapTCrk"
            name: "Historic Museum"
            description: "A museum showcasing local history and artifacts."
            latitude: 35.6896
            longitude: 139.6920
    SuccessUserRes:
      properties:
        username:
          type: string
        email:
          type: string
      required: [username,email]
      example:
        username: "johndoe"
        email: "johndoe@example.com"
    ErrorRes:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: error message
